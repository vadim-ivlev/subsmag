<?php

namespace Rg\ApiBundle\Repository;
use Rg\ApiBundle\Entity\Area;
use Rg\ApiBundle\Entity\Delivery;
use Rg\ApiBundle\Entity\Medium;
use Rg\ApiBundle\Entity\Period;
use Rg\ApiBundle\Entity\Product;
use Rg\ApiBundle\Entity\Timeunit;

/**
 * TariffRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TariffRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param int $product_id
     * @return array
     */
    public function filterByProductId(int $product_id)
    {
        $tariffs = $this->findBy(['product' => $product_id]);

        return $tariffs;
    }

    public function getPriceByProductMediumDeliveryPeriodAreaTimeunit(
        Product $product,
        $medium_id,
        $delivery_id,
        Area $area,
        int $bitmask
    )
    {
        $sql = 'SELECT t.price
            FROM tariff t
            WHERE 
                t.medium_id = :medium_id
                AND t.delivery_id = :delivery_id
                AND t.product_id = :product_id
                AND t.zone_id = :zone_id
                AND t.timeunit_id = (
                  SELECT id FROM timeunit WHERE bitmask = :bitmask
                )
            ';

        $stmt = $this->getEntityManager()->getConnection()
            ->prepare($sql)
        ;

        $stmt->bindValue('medium_id', $medium_id);
        $stmt->bindValue('delivery_id', $delivery_id);
        $stmt->bindValue('product_id', $product->getId());
        $stmt->bindValue('zone_id', $area->getZone()->getId());
        $stmt->bindValue('bitmask', $bitmask);

        $stmt->execute();

        $price = $stmt->fetchColumn();

        return $price;
    }
}
